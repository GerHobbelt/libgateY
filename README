libgateY
========

Visualize and control C++ data using the web browser. Single hpp/cpp, no dependencies, OS X, Windows, Linux.

Simple example:

C++

#include "../../gatey.hpp"
#include <thread>
#include <chrono>
#include <cmath>

int main() {
	std::chrono::milliseconds dura(20);
	gatey::global = std::make_shared<gatey::GateY>();
	
	gatey::WriteVariable<std::tuple<float, float>> gF("y");
	gatey::ReadVariable<float> gDt("dt", 0.01f);
	gatey::ReadVariable<float> gC("c", 1.0f);


	float time = 0.0f;
	while (true) {
		float y = gC.get() * std::sin(time);
		gF.set(std::make_pair(time, y));
		time += gDt.get();
		std::this_thread::sleep_for(dura);
	}

    return 0;
}

JavaScript

<!DOCTYPE html>
<meta charset="utf-8">
<html>
<body>
<link href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.min.js"></script>
<script src="gateY.js"></script>
<script>
    "use strict";

    var gDt, gC, gY;

    function refresh() {
        gC.set($("#slider_c").slider("value") / 100);
        gDt.set($("#slider_dt").slider("value") / 1000)
    }

    $(function() {
        $('#slider_dt').slider({
            min: 0, max: 100, value: 1,
            slide: refresh,
            change: refresh
        });

        $('#slider_c').slider({
            min: 0, max: 100, value: 1,
            slide: refresh,
            change: refresh
        });
    });

    $(document).ready(function() {

        gDt = new gatey.WriteVariable('dt');
        gC = new gatey.WriteVariable('c');
        gY = new gatey.ReadVariable('y', 0);

        gY.onChange = function(xs) {
            $('#y').html(JSON.stringify(xs));
        };
    });
</script>
<div id="slider_dt"></div>
<div id="slider_c"></div>
<h1 id="y"></h1>
</body>
</html>
